{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "DM",
	"scopeName": "source.byonddms",
	"fileTypes": [
		"dm"
	],
	"patterns": [
		{
			"captures": {
				"1": {
					"name": "keyword.other.using.source.dm"
				}
			},
			"begin": "^\\s*(using)\bs*",
			"end": "\\s*(?:$|(;))",
			"name": "meta.keyword.using.source.dm"
		},
		{
			"begin": "^\\s*((namespace)\\s+([\\w.]+))",
			"beginCaptures": {
				"1": {
					"name": "meta.namespace.identifier.source.dm"
				},
				"2": {
					"name": "keyword.other.namespace.source.dm"
				},
				"3": {
					"name": "entity.name.type.namespace.source.dm"
				}
			},
			"end": "}",
			"endCaptures": {
				"0": {
					"name": "punctuation.section.namespace.end.source.dm"
				}
			},
			"name": "meta.namespace.source.dm",
			"patterns": [
				{
					"begin": "{",
					"beginCaptures": {
						"0": {
							"name": "punctuation.section.namespace.begin.source.dm"
						}
					},
					"end": "(?=})",
					"name": "meta.namespace.body.source.dm",
					"patterns": [
						{
							"include": "#code"
						}
					]
				}
			]
		},
		{
			"include": "#code"
		}
	],
	"repository": {
		"block": {
			"patterns": [
				{
					"begin": "{",
					"beginCaptures": {
						"0": {
							"name": "punctuation.section.block.begin.source.dm"
						}
					},
					"end": "}",
					"endCaptures": {
						"0": {
							"name": "punctuation.section.block.end.source.dm"
						}
					},
					"name": "meta.block.source.dm",
					"patterns": [
						{
							"include": "#code"
						}
					]
				}
			]
		},
		"types": {
			"patterns": [
				{
					"match": "\\b(proc|verb|datum|atom(/movable)?|obj|mob|turf|area|savefile|list|client|sound|image|database|matrix|regex|exception)\\b",
					"name": "storage.type.dm"
				},
				{
					"match": "\\b(as|const|global|set|static|tmp|in)\\b",
					"name": "storage.modifier.dm"
				}
			]
		},
		"code": {
			"patterns": [
				{
					"include": "#block"
				},
				{
					"include": "#comments"
				},
				{
					"include": "#preprocessor"
				},
				{
					"include": "#constants"
				},
				{
					"include": "#types"
				},
				{
					"include": "#keywords"
				},
				{
					"include": "#method-call"
				},
				{
					"include": "#documentation"
				}
			]
		},
		"code-restricted": {
			"patterns": [
				{
					"include": "#constants"
				},
				{
					"include": "#keywords"
				},
				{
					"include": "#method-call"
				},
				{
					"include": "#types"
				},
				{
					"include": "#comments"
				},
				{
					"include": "#block"
				}
			]
		},
		"comments": {
			"patterns": [
				{
					"begin": "///",
					"captures": {
						"0": {
							"name": "punctuation.definition.comment.source.dm"
						}
					},
					"end": "$\\n?",
					"name": "comment.block.documentation.source.dm",
					"patterns": [
						{
							"include": "text.xml"
						}
					]
				},
				{
					"begin": "/\\*",
					"captures": {
						"0": {
							"name": "punctuation.definition.comment.source.dm"
						}
					},
					"end": "\\*/\\n?",
					"name": "comment.block.source.dm"
				},
				{
					"begin": "//",
					"captures": {
						"1": {
							"name": "punctuation.definition.comment.source.dm"
						}
					},
					"end": "$\\n?",
					"name": "comment.line.double-slash.source.dm"
				}
			]
		},
		"constants": {
			"patterns": [
				{
					"name": "string.quoted.triple",
					"begin": "{\"",
					"end": "\"}",
					"beginCaptures": {
						"0": {
							"name": "punctuation.definition.string.begin.source.dm"
						}
					},
					"endCaptures": {
						"0": {
							"name": "punctuation.definition.string.end.source.dm"
						}
					},
					"patterns": [
						{
							"begin": "\\[",
							"beginCaptures": {
								"0": {
									"name": "punctuation.definition.string.function.begin.source.dm"
								}
							},
							"end": "\\]",
							"endCaptures": {
								"0": {
									"name": "punctuation.definition.string.function.end.source.dm"
								}
							},
							"name": "variable",
							"patterns": [
								{
									"include": "#code-restricted"
								},
								{
									"match": "\\?",
									"name": "constant.character.function.if"
								},
								{
									"match": "\\:",
									"name": "constant.character.function.else"
								}
							]
						}
					]
				},
				{
					"match": "\\b([A-Z_][A-Z_0-9]{5,})\\b",
					"name": "entity.name.function.preprocessor.source.dm"
				},
				{
					"match": "\\b(true|false|TRUE|FALSE)\\b",
					"name": "constant.language.source.dm"
				},
				{
					"match": "\\b((0(x|X)[0-9a-fA-F]*)|(([0-9]+\\.?[0-9]*)|(\\.[0-9]+))((e|E)(\\+|-)?[0-9]+)?)(L|l|UL|ul|u|U|F|f|ll|LL|ull|ULL)?\\b",
					"name": "constant.numeric.source.dm"
				},
				{
					"captures": {
						"0": {
							"name": "punctuation.definition.string.begin.source.dm"
						}
					},
					"match": "@\"([^\"]|\"\")*\"",
					"name": "string.quoted.double.literal.source.dm"
				},
				{
					"match": "\\bnull\\b",
					"name": "constant.language.dm"
				},
				{
					"begin": "\"",
					"beginCaptures": {
						"0": {
							"name": "punctuation.definition.string.begin.source.dm"
						}
					},
					"end": "\"",
					"endCaptures": {
						"0": {
							"name": "punctuation.definition.string.end.source.dm"
						}
					},
					"name": "string.quoted.double.source.dm",
					"patterns": [
						{
							"match": "\\\\(:?\\\\|\\[||\\]|<|>|n|ref|[Tt]he|[Aa]n?|[Ss]?[Hh]e|(her|him)(self)?|[Hh]is|[Hh]ers|th|s|icon|[Rr]oman|...|\")",
							"name": "constant.character.escape.source.dm"
						},
						{
							"begin": "\\[",
							"beginCaptures": {
								"0": {
									"name": "punctuation.definition.string.function.begin.source.dm"
								}
							},
							"end": "\\]",
							"endCaptures": {
								"0": {
									"name": "punctuation.definition.string.function.end.source.dm"
								}
							},
							"name": "variable",
							"patterns": [
								{
									"include": "#code-restricted"
								},
								{
									"match": "\\?",
									"name": "constant.character.function.if"
								},
								{
									"match": "\\:",
									"name": "constant.character.function.else"
								}
							]
						}
					]
				},
				{
					"begin": "'",
					"beginCaptures": {
						"0": {
							"name": "punctuation.definition.filepath.begin.source.dm"
						}
					},
					"end": "'",
					"endCaptures": {
						"0": {
							"name": "punctuation.definition.filepath.end.source.dm"
						}
					},
					"name": "string.filepath.source.dm"
				}
			]
		},
		"keywords": {
			"patterns": [
				{
					"match": "\\b(sleep|spawn|break|continue|do|else|for|goto|if|return|switch|while|catch)\\b",
					"name": "keyword.control.dm"
				},
				{
					"match": "\\b(src|world|usr|args|vars)\\b",
					"name": "constant.character.escape.source.dm"
				},
				{
					"match": "\\b(var|set|global|const)\\b",
					"name": "keyword.other.source.dm"
				},
				{
					"match": "\\b(del|new)\\b",
					"name": "keyword.other.dm"
				},
				{
					"match": "\\b(usr|world|src|args)\\b",
					"name": "variable.language.dm"
				},
				{
					"match": "(\\?|(>|<)(=)?|\\.|:|/(=)?|~|\\+(\\+|=)?|-(-|=)?|\\*(\\*|=)?|%|>>|<<|=(=)?|!(=)?|<>|&|&&|\\^|\\||\\|\\||\\bto\\b|\\bin\\b|\\bstep\\b)",
					"name": "keyword.operator.dm"
				}
			]
		},
		"method": {
			"patterns": [
				{
					"begin": "\\[",
					"end": "\\]",
					"name": "meta.method.annotation.source.dm",
					"patterns": [
						{
							"include": "#constants"
						},
						{
							"include": "#preprocessor"
						},
						{
							"include": "#builtinTypes"
						}
					]
				},
				{
					"begin": "(?=\\bnew\\s+)(?=[\\w<].*\\s+)(?=[^=]+\\()",
					"end": "(?={|;)",
					"name": "meta.new-object.source.dm",
					"patterns": [
						{
							"include": "#code"
						}
					]
				},
				{
					"begin": "(?!new)(?=[\\w<].*\\s+)(?=[^=]+\\()",
					"end": "(})|(?=;)",
					"endCaptures": {
						"1": {
							"name": "punctuation.section.method.end.source.dm"
						}
					},
					"name": "meta.method.source.dm",
					"patterns": [
						{
							"include": "#storage-modifiers"
						},
						{
							"begin": "([\\w.]+)\\s*\\(",
							"beginCaptures": {
								"1": {
									"name": "entity.name.function.source.dm"
								}
							},
							"end": "\\)",
							"name": "meta.method.identifier.source.dm",
							"patterns": [
								{
									"include": "#parameters"
								}
							]
						},
						{
							"begin": "(?=\\w.*\\s+[\\w.]+\\s*\\()",
							"end": "(?=[\\w.]+\\s*\\()",
							"name": "meta.method.return-type.source.dm",
							"patterns": [
								{
									"include": "#builtinTypes"
								}
							]
						},
						{
							"begin": ":\\s*(src|..|.)\\s*\\(",
							"beginCaptures": {
								"1": {
									"name": "constant.language.source.dm"
								}
							},
							"end": "\\)",
							"name": "meta.method.base-call.source.dm",
							"patterns": [
								{
									"include": "#builtinTypes"
								}
							]
						},
						{
							"begin": "{",
							"beginCaptures": {
								"0": {
									"name": "punctuation.section.method.begin.source.dm"
								}
							},
							"end": "(?=})",
							"name": "meta.method.body.source.dm",
							"patterns": [
								{
									"include": "#code"
								}
							]
						}
					]
				},
				{
					"begin": "(?!new)(?=[\\w<].*\\s+)(?=[^=]+\\{)",
					"end": "}",
					"endCaptures": {
						"0": {
							"name": "punctuation.section.property.end.source.dm"
						}
					},
					"name": "meta.property.source.dm",
					"patterns": [
						{
							"include": "#storage-modifiers"
						},
						{
							"begin": "([\\w.]+)\\s*(?={)",
							"captures": {
								"1": {
									"name": "entity.name.function.source.dm"
								}
							},
							"end": "(?={)",
							"name": "meta.method.identifier.source.dm"
						},
						{
							"begin": "(?=\\w.*\\s+[\\w.]+\\s*\\{)",
							"end": "(?=[\\w.]+\\s*\\{)",
							"name": "meta.method.return-type.source.dm",
							"patterns": [
								{
									"include": "#builtinTypes"
								}
							]
						},
						{
							"begin": "{",
							"beginCaptures": {
								"0": {
									"name": "punctuation.section.property.begin.source.dm"
								}
							},
							"end": "(?=})",
							"name": "meta.method.body.source.dm",
							"patterns": [
								{
									"include": "#code"
								}
							]
						}
					]
				}
			]
		},
		"preprocessor": {
			"patterns": [
				{
					"captures": {
						"2": {
							"name": "meta.toc-list.region.source.dm"
						}
					},
					"match": "^\\s*#\\s*(region)\\b\\s*([^/]+)\\s",
					"name": "meta.preprocessor.source.dm"
				},
				{
					"captures": {
						"2": {
							"name": "entity.name.function.preprocessor.source.dm"
						}
					},
					"match": "^\\s*#(define|undef|if|else|elif|ifndef|endif)\\b\\s*(\\S*)",
					"name": "meta.preprocessor.source.dm"
				},
				{
					"match": "^\\s*#(if|else|elif|endif|define|undef|warn|error)\\b\\s*([^/]+)\\s",
					"name": "meta.preprocessor.source.dm"
				}
			]
		}
	}
}
